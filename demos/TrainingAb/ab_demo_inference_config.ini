[promise12]
#patfh_to_search = data/PROMISE12/TrainingData_Part1,data/PROMISE12/TrainingData_Part2,data/PROMISE12/TrainingData_Part3
#filename_contains = Case,mhd
#filename_not_contains = Case2,segmentation
csv_file = demos/TrainingAb/file_list.csv
spatial_window_size = (104, 104, 80)
interp_order = 3
axcodes=(A, R, S)

[label]
csv_file = demos/TrainingAb/file_list_seg.csv
#patfh_to_search = "data/PROMISE12/TrainingData_Part1","data/PROMISE12/TrainingData_Part2","data/PROMISE12/TrainingData_Part3"
#filename_contains = Case,_segmentation,mhd
#filename_not_contains = Case2
spatial_window_size = (104, 104, 80)
interp_order = 3
axcodes=(A, R, S)

############################## system configuration sections
[SYSTEM]
cuda_devices = ""
num_threads = 4
num_gpus = 1
model_dir = ./trainingab_model

[NETWORK]
name = dense_vnet
activation_function = prelu
batch_size = 1

# volume level preprocessing
volume_padding_size = 0
# histogram normalisation
histogram_ref_file = histogram.txt
norm_type = percentile
cutoff = (0.01, 0.99)
normalisation = True
whitening = True
normalise_foreground_only=True
foreground_type = otsu_plus
multimod_foreground_type = and
window_sampling = resize

queue_length = 8


[INFERENCE]
border = (0,0,0)
save_seg_dir = output1/
output_interp_order = 1
spatial_window_size = (104,104,80)

############################ custom configuration sections
[SEGMENTATION]
image = promise12
label = label
output_prob = True
num_classes = 14
label_normalisation = True
min_numb_labels = 2
min_sampling_ratio = 0.000001
